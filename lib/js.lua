--[[@diagnostic disable: missing-return, assign-type-mismatch]]

--[[should mark experimental apis as @deprecated experimental]]

--[[https://www.six-group.com/dam/download/financial-information/data-center/iso-currrency/lists/list-one.xml]]
--[[ [...document.querySelectorAll('Ccy')].map(x=>'"'+x.innerHTML+'"').join('|') ]]
--[[@alias iso_4217_currency "AFN"|"EUR"|"ALL"|"DZD"|"USD"|"EUR"|"AOA"|"XCD"|"XCD"|"ARS"|"AMD"|"AWG"|"AUD"|"EUR"|"AZN"|"BSD"|"BHD"|"BDT"|"BBD"|"BYN"|"EUR"|"BZD"|"XOF"|"BMD"|"INR"|"BTN"|"BOB"|"BOV"|"USD"|"BAM"|"BWP"|"NOK"|"BRL"|"USD"|"BND"|"BGN"|"XOF"|"BIF"|"CVE"|"KHR"|"XAF"|"CAD"|"KYD"|"XAF"|"XAF"|"CLP"|"CLF"|"CNY"|"AUD"|"AUD"|"COP"|"COU"|"KMF"|"CDF"|"XAF"|"NZD"|"CRC"|"XOF"|"EUR"|"CUP"|"CUC"|"ANG"|"EUR"|"CZK"|"DKK"|"DJF"|"XCD"|"DOP"|"USD"|"EGP"|"SVC"|"USD"|"XAF"|"ERN"|"EUR"|"SZL"|"ETB"|"EUR"|"FKP"|"DKK"|"FJD"|"EUR"|"EUR"|"EUR"|"XPF"|"EUR"|"XAF"|"GMD"|"GEL"|"EUR"|"GHS"|"GIP"|"EUR"|"DKK"|"XCD"|"EUR"|"USD"|"GTQ"|"GBP"|"GNF"|"XOF"|"GYD"|"HTG"|"USD"|"AUD"|"EUR"|"HNL"|"HKD"|"HUF"|"ISK"|"INR"|"IDR"|"XDR"|"IRR"|"IQD"|"EUR"|"GBP"|"ILS"|"EUR"|"JMD"|"JPY"|"GBP"|"JOD"|"KZT"|"KES"|"AUD"|"KPW"|"KRW"|"KWD"|"KGS"|"LAK"|"EUR"|"LBP"|"LSL"|"ZAR"|"LRD"|"LYD"|"CHF"|"EUR"|"EUR"|"MOP"|"MKD"|"MGA"|"MWK"|"MYR"|"MVR"|"XOF"|"EUR"|"USD"|"EUR"|"MRU"|"MUR"|"EUR"|"XUA"|"MXN"|"MXV"|"USD"|"MDL"|"EUR"|"MNT"|"EUR"|"XCD"|"MAD"|"MZN"|"MMK"|"NAD"|"ZAR"|"AUD"|"NPR"|"EUR"|"XPF"|"NZD"|"NIO"|"XOF"|"NGN"|"NZD"|"AUD"|"USD"|"NOK"|"OMR"|"PKR"|"USD"|"PAB"|"USD"|"PGK"|"PYG"|"PEN"|"PHP"|"NZD"|"PLN"|"EUR"|"USD"|"QAR"|"EUR"|"RON"|"RUB"|"RWF"|"EUR"|"SHP"|"XCD"|"XCD"|"EUR"|"EUR"|"XCD"|"WST"|"EUR"|"STN"|"SAR"|"XOF"|"RSD"|"SCR"|"SLL"|"SLE"|"SGD"|"ANG"|"XSU"|"EUR"|"EUR"|"SBD"|"SOS"|"ZAR"|"SSP"|"EUR"|"LKR"|"SDG"|"SRD"|"NOK"|"SEK"|"CHF"|"CHE"|"CHW"|"SYP"|"TWD"|"TJS"|"TZS"|"THB"|"USD"|"XOF"|"NZD"|"TOP"|"TTD"|"TND"|"TRY"|"TMT"|"USD"|"AUD"|"UGX"|"UAH"|"AED"|"GBP"|"USD"|"USD"|"USN"|"UYU"|"UYI"|"UYW"|"UZS"|"VUV"|"VES"|"VED"|"VND"|"USD"|"USD"|"XPF"|"MAD"|"YER"|"ZMW"|"ZWL"|"XBA"|"XBB"|"XBC"|"XBD"|"XTS"|"XXX"|"XAU"|"XPD"|"XPT"|"XAG"]]

--[[@alias js_string_like string|js_string]]
--[[@alias js_number_like number|integer|js_number]]
--[[@alias js_integer_like integer|js_number]]
--[[@alias js_boolean_like boolean|js_boolean]]

if false then
	local common = { --[[@class js_common_namespace]]
		Infinity = 0, --[[@type js_number]]
		NaN = 0, --[[@type js_number]]
		--[[@class js_string_class: js_string]]

		--[[@class js_string]]
		--[[@overload fun(x: unknown): js_string]]
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String  ]]
		--[[omitted: `[@@iterator]`]]
		String = {
			new = 0, --[[@type fun(x: js_string_like): js_string_class]]
			anchor = 0, --[[@type fun(self: js_string, name: js_string_like): js_string]] --[[@deprecated]] --[[returns `<a name="{name}">{self}</a>`]]
			at = 0, --[[@type fun(self: js_string, index: integer): js_string]] --[[returns the `index`th character. if `index < 0`, returns the `-index`th last character.]]
			big = 0, --[[@type fun(self: js_string): js_string]] --[[@deprecated `big` element also no longer exists]] --[[returns `<big>{self}</big>`]]
			blink = 0, --[[@type fun(self: js_string): js_string]] --[[@deprecated]] --[[returns `<blink>{self}</blink>`]]
			bold = 0, --[[@type fun(self: js_string): js_string]] --[[@deprecated]] --[[returns `<bold>{self}</bold>`]]
			charAt = 0, --[[@type fun(self: js_string, index: js_integer_like): js_string]] --[[returns the `index`th character. `index` falls back to `0` when not a number.]]
			charCodeAt = 0, --[[@type fun(self: js_string, index: js_integer_like): js_number]] --[[returns the code of the `index`th character. `index` falls back to `0` when not a number.]]
			codePointAt = 0, --[[@type fun(self: js_string, index: js_integer_like): js_number]] --[[returns the code point starting at the `index`th character. `index` falls back to `0` when not a number.]]
			concat = 0, --[[@type fun(self: js_string, other: js_string_like, ...: js_string_like): js_string]]
			endsWith = 0, --[[@type fun(self: js_string, searchString: js_string_like, endPosition?: js_integer_like): js_boolean]]
			fixed = 0, --[[@type fun(self: js_string): js_string]] --[[@deprecated]] --[[returns `<tt>{self}</tt>`]]
			fontColor = 0, --[[@type fun(self: js_string, color: js_string_like): js_string]] --[[@deprecated]] --[[returns `<font color="{color}">{self}</font>`]]
			fontSize = 0, --[[@type fun(self: js_string, size: js_integer_like): js_string]] --[[@deprecated]] --[[returns `<font sizeof="{size}">{self}</font>`]]
			fromCharCode = 0, --[[@type fun(char_code: js_integer_like, ...: js_integer_like): js_string]]
			fromCodePoint = 0, --[[@type fun(code_point: js_integer_like, ...: js_integer_like): js_string]]
			includes = 0, --[[@type fun(self: js_string, searchString: js_string_like, position?: js_integer_like): js_boolean]]
			indexOf = 0, --[[@type fun(self: js_string, searchString: js_string_like, position?: js_integer_like): -1|js_number]]
			italics = 0, --[[@type fun(self: js_string): js_string]] --[[returns `<i>{self}</i>`]] --[[@deprecated]]
			lastIndexOf = 0, --[[@type fun(self: js_string, searchString: js_string_like, position?: js_integer_like): js_number]]
			link = 0, --[[@type fun(self: js_string, url: js_string_like): js_string]] --[[@deprecated]] --[[returns `<a href="{url}">{self}</a>`]]
			--[[`options.collation` to avoid: `"big5han"|"direct"|"ducet"|"gb2312"|"reformed"|"searchjl"|"unihan"`]]
			localeCompare = 0, --[[@type fun(self: js_string, compareString: js_string_like, locales?: js_string_like|js_string_like[], options?: {localeMatcher?:"lookup"|"best fit"|js_string;usage?:"sort"|"search"|js_string;sensitivity?:"base"|"accent"|"case"|"variant"|js_string;ignorePunctuation?:js_boolean_like;numeric?:js_boolean_like;caseFirst?:"upper"|"lower"|"false"|js_string;collation?:"compat"|"dict"|"emoji"|"eor"|"phonebk"|"phonetic"|"pinyin"|"stroke"|"trad"|"zhuyin"|js_string;}): js_number]] --[[returns `<a href="{url}">{self}</a>`]] --[[@deprecated]]
			--[[also accepts `{[@@match]:fun()}`]]
			match = 0, --[[@type fun(self: js_string, regexp: js_regexp|js_string_like): js_string[]?]]
			--[[also accepts `{[@@matchAll]:fun()}`. returns an iterator.]]
			matchAll = 0, --[[@type fun(self: js_string, regexp: js_regexp|js_string_like): (fun():js_number[])]]
			normalize = 0, --[[@type fun(self: js_string, form?: "NFC"|"NFD"|"NFKC"|"NFKD"|js_string): js_string]]
			padEnd = 0, --[[@type fun(self: js_string, targetLength: js_integer_like, padString?: js_string_like): js_string]]
			padStart = 0, --[[@type fun(self: js_string, targetLength: js_integer_like, padString?: js_string_like): js_string]]
			raw = 0, --[[@type fun(strings: {raw:js_string_like[];}, ...: unknown): js_string]]
			["repeat"] = 0, --[[@type fun(self: js_string, count: js_integer_like): js_string]]
			--[[`pattern` also accepts `{[@@replace]:fun()}`]]
			replaceAll = 0, --[[@type fun(self: js_string, pattern: js_string_like|js_regexp, replacement: js_string_like|fun(match:string,...:string):string): js_string]]
			--[[also accepts `{[@@search:fun()}`]]
			search = 0, --[[@type fun(self: js_string, regexp: js_regexp|js_string_like): -1|js_number]]
			slice = 0, --[[@type fun(self: js_string, indexStart: js_integer_like, indexEnd?: js_integer_like): js_string]]
			small = 0, --[[@deprecated `small` element also no longer exists]] --[[@type fun(self: js_string): js_string]] --[[returns `<small>{self}</small>`]]
			--[[`separator` also accepts `{[@@split:fun()}`]]
			split = 0, --[[@type fun(self: js_string, separator: js_regexp|js_string_like, limit?: js_integer_like): js_string[] ]]
			startsWith = 0, --[[@type fun(self: js_string, searchString: js_string_like, position?: js_integer_like): js_boolean]]
			strike = 0, --[[@deprecated]] --[[@type fun(self: js_string): js_string]] --[[returns `<strike>{self}</strike>`]]
			sub = 0, --[[@deprecated]] --[[@type fun(self: js_string): js_string]] --[[returns `<sub>{self}</sub>`]]
			substr = 0, --[[@deprecated]] --[[@type fun(self: js_string, start: js_integer_like, length?: js_integer_like): js_string]]
			substring = 0, --[[@type fun(self: js_string, indexStart: js_integer_like, indexEnd?: js_integer_like): js_string]]
			sup = 0, --[[@deprecated]] --[[@type fun(self: js_string): js_string]] --[[returns `<sup>{self}</sup>`]]
			toLocaleLowerCase = 0, --[[@type fun(self: js_string, locales?: js_string_like|js_string_like[]): js_string]]
			toLocaleUpperCase = 0, --[[@type fun(self: js_string, locales?: js_string_like|js_string_like[]): js_string]]
			toLowerCase = 0, --[[@type fun(self: js_string): js_string]]
			toString = 0, --[[@type fun(self: js_string): js_string]]
			toUpperCase = 0, --[[@type fun(self: js_string): js_string]]
			trim = 0, --[[@type fun(self: js_string): js_string]]
			trimEnd = 0, --[[@type fun(self: js_string): js_string]]
			trimStart = 0, --[[@type fun(self: js_string): js_string]]
			valueOf = 0, --[[@type fun(self: js_string): js_string]]
		},
		--[[@class js_intl_number_format_options]]
		--[[@field compactDisplay? "short"|"long"|js_string]]
		--[[@field currency? iso_4217_currency|js_string]]
		--[[@field currencyDisplay? "symbol"|"narrowSymbol"|"code"|"name"|js_string]]
		--[[@field currencySign? "standard"|"accounting"|js_string]]
		--[[@field localeMatcher? "lookup"|"best fit"|js_string]]
		--[[@field notation? "standard"|"scientific"|"engineering"|"compact"|js_string]]
		--[[@field numberingSystem? "arab"|"arabext"|"bali"|"beng"|"deva"|"fullwide"|"gujr"|"guru"|"hanidec"|"khmr"|"knda"|"laoo"|"latn"|"limb"|"mlym"|"mong"|"mymr"|"orya"|"tamldec"|"telu"|"thai"|"tibt"|js_string]]
		--[[@field signDisplay? "auto"|"always"|"exceptZero"|"negative"|"never"|js_string]]
		--[[@field style? "decimal"|"currency"|"percent"|"unit"|js_string]]
		--[[@field unit? "acre"|"bit"|"byte"|"celsius"|"centimeter"|"day"|"degree"|"fahrenheit"|"fluid-ounce"|"foot"|"gallon"|"gigabit"|"gigabyte"|"gram"|"hectare"|"hour"|"inch"|"kilobit"|"kilobyte"|"kilogram"|"kilometer"|"liter"|"megabit"|"megabyte"|"meter"|"mile"|"mile-scandinavian"|"milliliter"|"millimeter"|"millisecond"|"minute"|"month"|"ounce"|"percent"|"petabyte"|"pound"|"second"|"stone"|"terabit"|"terabyte"|"week"|"yard"|"year"|js_string]]
		--[[@field unitDisplay? "long"|"short"|"narrow"|js_string]]
		--[[@field useGrouping? "always"|"auto"|false|"min2"|true|js_string|js_boolean]]
		--[[@field roundingMode? "ceil"|"floor"|"expand"|"trunc"|"halfCeil"|"halfFloor"|"halfExpand"|"halfTrunc"|"halfEven"|js_string]]
		--[[@field roundingPriority? "auto"|"morePrecision"|"lessPrecision"|js_string]]
		--[[@field roundingIncrement? 1|2|5|10|20|25|50|100|200|250|500|1000|2000|2500|5000|js_number]]
		--[[@field trailingZeroDisplay? "auto"|"stripIfInteger"]]
		--[[@field minimumIntegerDigits? 1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|js_number]]
		--[[@field minimumFractionDigits? 0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|js_number]]
		--[[@field maximumFractionDigits? 0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|js_number]]
		--[[@field minimumSignificantDigits? 1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|js_number]]
		--[[@field maximumSignificantDigits? 1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|js_number]]

		--[[@class js_number_class: js_number]]

		--[[@class js_number]]
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number  ]]
		--[[@overload fun(x: unknown): js_number]]
		Number = {
			--[[@type fun(x: js_number_like): js_number_class]]
			new = 0,
			EPSILON = 0, --[[@type js_number]]
			MAX_SAFE_INTEGER = 0, --[[@type js_number]]
			MAX_VALUE = 0, --[[@type js_number]]
			MIN_SAFE_INTEGER = 0, --[[@type js_number]]
			MIN_VALUE = 0, --[[@type js_number]]
			NaN = 0, --[[@type js_number]]
			NEGATIVE_INFINITY = 0, --[[@type js_number]]
			POSITIVE_INFINITY = 0, --[[@type js_number]]
			isFinite = 0, --[[@type fun(value: js_number_like): js_boolean]]
			isInteger = 0, --[[@type fun(value: js_number_like): js_boolean]]
			isNaN = 0, --[[@type fun(value: unknown): js_boolean]]
			isSafeInteger = 0, --[[@type fun(value: js_number_like): js_boolean]]
			parseFloat = 0, --[[@type fun(string: js_string_like): js_number]]
			parseInt = 0, --[[@type fun(string: js_string_like, radix?: 2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|js_number): js_number]]
			toExponential = 0, --[[@type fun(self: js_number, fractionDigits?: js_integer_like): js_string]]
			toFixed = 0, --[[@type fun(self: js_number, digits?: js_integer_like): js_string]]
			toLocaleString = 0, --[[@type fun(self: js_number, locales?: js_string_like|js_string_like[], options?: js_intl_number_format_options): js_string]]
			toPrecision = 0, --[[@type fun(self: js_number, precision?: js_integer_like): js_string]]
			toString = 0, --[[@type fun(self: js_number, radix?: 2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|js_number): js_string]]
			valueOf = 0, --[[@type fun(self: js_number): js_number]]
		},
		--[[@class js_boolean_class: js_boolean]]

		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean  ]]
		--[[@class js_boolean]]
		--[[@overload fun(x: unknown): js_boolean]]
		Boolean = {
			new = 0, --[[@type fun(x: js_boolean_like): js_boolean_class]]
			toString = 0, --[[@type fun(self: js_boolean): js_string]]
			valueOf = 0, --[[@type fun(self: js_boolean): js_boolean]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt  ]]
		--[[@class js_bigint]]
		--[[@overload fun(x: unknown): js_bigint]]
		BigInt = {
			--[[truncates a `bigint` to `bits` bits]]
			asIntN = 0, --[[@type fun(bits: js_integer_like, bigint?: js_bigint)]]
			--[[truncates a `bigint` to `bits` bits]]
			asUintN = 0, --[[@type fun(bits: js_integer_like, bigint?: js_bigint)]]
			toLocaleString = 0, --[[@type fun(self: js_bigint, locales?: js_string_like|js_string_like[], options?: js_intl_number_format_options): js_string]]
			toString = 0, --[[@type fun(self: js_bigint, radix?: js_integer_like): js_string]]
			valueOf = 0, --[[@type fun(self: js_bigint): js_bigint]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol  ]]
		--[[@class js_symbol]]
		--[[@overload fun(x: unknown): js_symbol]]
		Symbol = {
			--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date  ]]
		--[[@class js_date]]
		--[[@overload fun(x: unknown): js_date]]
		Date = {
			--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp  ]]
		--[[@class js_regexp]]
		--[[@overload fun(x: js_string_like, flags?: js_string_like): js_regexp]]
		RegExp = {
			--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise  ]]
		--[[return values are supposed to be `js_promise<t, r>` but that is not currently supported]]
		Promise = { --[[@class js_promise<t, r>]]
			--[[returns `js_promise<t, r>`]]
			--[[@generic t, r]]
			--[[@type fun(executor: fun(resolveFunc: (fun(value: t)), rejectFunc: (fun(reason: r)))): js_promise]]
			new = 0,
			--[[also accepts other iterables. returns `js_promise<t[], r>`]]
			--[[@generic t, r]]
			--[[@type fun(iterable: js_promise<t, r>[]): js_promise]]
			all = 0,
			--[[also accepts other iterables. returns `js_promise<({status:"fulfilled";value:t;}|{status:"rejected";reason:r;})[]>`]]
			--[[@generic t, r]]
			--[[@type fun(iterable: js_promise<t, r>[]): js_promise]]
			allSettled = 0,
			--[[also accepts other iterables. returns first promise that finishes without error. returns `js_promise<t, r>`.]]
			--[[@generic t, r]]
			--[[@type fun(iterable: js_promise<t, r>[]): js_promise]]
			any = 0,
			--[[returns `js_promise<t, s>`]]
			--[[@generic t, r, s]]
			--[[@type fun(self: js_promise<t, r>, onRejected: fun(reason: r): s|js_promise<t, s>): js_promise]]
			catch = 0,
			--[[returns `js_promise<t, r>`]]
			--[[@generic t, r]]
			--[[@type fun(self: js_promise<t, r>, onFinally: fun()): js_promise]]
			finally = 0,
			--[[returns `js_promise<t, r>`]]
			--[[also accepts other iterables. returns first finished promise.]]
			--[[@generic t, r]]
			--[[@type fun(iterable: js_promise<t>[]): js_promise]]
			race = 0,
			--[[returns `js_promise<t, r>`]]
			--[[@generic t, r]]
			--[[@type fun(reason: r): js_promise]]
			reject = 0,
			--[[returns `js_promise<t, r>`]]
			--[[also accepts thenables]]
			--[[@generic t, r]]
			--[[@type fun(value: t|js_promise<t, r>): js_promise]]
			resolve = 0,
			--[[returns `js_promise<u, r|s>`]]
			--[[`s` should default to `never`, but that doesn't exist in lua]]
			--[[@generic t, r, u, s]]
			--[[@type fun(self: js_promise<t, r>, onFulfilled: (fun(value: t): u), onRejected?: (fun(reason: r): s)): js_promise]]
			["then"] = 0,
		--[[IMPL]]
		},
		Set = { --[[@class js_set<t>: { set: fun() }]]
		--[[IMPL]]
		},
		Map = { --[[@class js_map<k, v>: { set: fun() }]]
		--[[IMPL]]
		},
	}
	local browser = { --[[@class js_browser_namespace: js_common_namespace]]
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Event  ]]
		Event = { --[[@class js_dom_event]]
			new = 0, --[[@type fun(type: js_string_like, options?: {bubbles?:js_boolean_like;cancelable?:js_boolean_like;composed?:js_boolean_like;})]]
			bubbles = 0, --[[@type js_boolean]]
			cancelable = 0, --[[@type js_boolean]]
			cancelBubble = 0, --[[@type js_boolean]] --[[@deprecated use `event.stopPropagation()` instead]]
			composed = 0, --[[@type js_boolean]]
			currentTarget = 0, --[[@type js_dom_event_target]]
			defaultPrevented = 0, --[[@type js_boolean]]
			eventPhase = 0, --[[@type js_number]]
			explicitOriginalTarget = 0, --[[@type js_dom_event_target|nil]] --[[@deprecated Firefox only]]
			isTrusted = 0, --[[@type js_boolean]]
			originalTarget = 0, --[[@type js_dom_event_target]] --[[@deprecated Firefox only]]
			returnValue = 0, --[[@type js_boolean]] --[[@deprecated]]
			srcElement = 0, --[[@type js_dom_event_target]] --[[@deprecated use `event.target` instead]]
			target = 0, --[[@type js_dom_event_target]]
			timeStamp = 0, --[[@type js_number]]
			type = 0, --[[@type js_string]]
			composedPath = 0, --[[@type fun(self: js_dom_event): js_dom_event_target[] ]]
			initEvent = 0, --[[@type fun(self: js_dom_event, type: js_string_like, bubbles: js_boolean_like, cancelable: js_boolean_like)]]
			preventDefault = 0, --[[@type fun(self: js_dom_event)]]
			stopImmediatePropagation = 0, --[[@type fun(self: js_dom_event)]]
			stopPropagation = 0, --[[@type fun(self: js_dom_event)]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/UIEvent  ]]
		UIEvent = { --[[@class js_dom_ui_event: js_dom_event]]
			--[[`options.sourceCapabilities` is Chromium only]]
			new = 0, --[[@type fun(type: "load"|"unload"|"abort"|"error"|"select"|js_string, options?: {detail?:js_integer_like;view?:js_window;sourceCapabilities?:js_input_device_capabilities;})]]
			detail = 0, --[[@type js_number]]
			sourceCapabilities = 0, --[[@type js_input_device_capabilities]] --[[@deprecated Chromium only]]
			view = 0, --[[@type js_window_proxy]]
			which = 0, --[[@type js_number]] --[[@deprecated]]
			initUIEvent = 0, --[[@type fun(self: js_dom_ui_event, type: js_string_like, canBubble: js_boolean_like, cancelable: js_boolean_like, view: js_window_proxy, detail: js_integer_like)]] --[[@deprecated]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent  ]]
		MouseEvent = { --[[@class js_dom_mouse_event: js_dom_ui_event]]
			new = 0, --[[@type fun(type: "dblclick"|"mousedown"|"mouseenter"|"mouseleave"|"mousemove"|"mouseout"|"mouseover"|"mouseup"|js_string, options?: {screenX?:js_integer_like;screenY?:js_integer_like;clientX?:js_integer_like;clientY?:js_integer_like;ctrlKey?:js_boolean_like;shiftKey?:js_boolean_like;altKey?:js_boolean_like;metaKey?:js_boolean_like;button?:js_integer_like;buttons?:js_integer_like;relatedTarget?:js_dom_event_target;region?:js_string_like;}): js_dom_mouse_event]]
			WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN = 0, --[[@type js_number]] --[[static]] --[[@deprecated WebKit only]]
			WEBKIT_FORCE_AT_MOUSE_DOWN = 0, --[[@type js_number]] --[[static]] --[[@deprecated WebKit only]]
			altKey = 0, --[[@type js_boolean]]
			button = 0, --[[@type 0|1|2|3|4|js_number]]
			buttons = 0, --[[@type js_number]] --[[bitwise or of buttons, which are `1`, `2`, `4`, `8`, `16` respectively]]
			clientX = 0, --[[@type js_number]]
			clientY = 0, --[[@type js_number]]
			ctrlKey = 0, --[[@type js_boolean]]
			layerX = 0, --[[@type js_number]] --[[integer]] --[[@deprecated non-standard]]
			layerY = 0, --[[@type js_number]]  --[[integer]] --[[@deprecated non-standard]]
			metaKey = 0, --[[@type js_boolean]]
			movementX = 0, --[[@type js_number]]
			movementY = 0, --[[@type js_number]]
			mozInputSource = 0, --[[@type js_number]] --[[@deprecated probably Firefox only]]
			offsetX = 0, --[[@type js_number]]
			offsetY = 0, --[[@type js_number]]
			pageX = 0, --[[@type js_number]]
			pageY = 0, --[[@type js_number]]
			relatedTarget = 0, --[[@type js_dom_event_target|nil]]
			screenX = 0, --[[@type js_number]]
			screenY = 0, --[[@type js_number]]
			shiftKey = 0, --[[@type js_boolean]]
			webkitForce = 0, --[[@type js_number]] --[[@deprecated WebKit only]]
			x = 0, --[[@type js_number]] --[[alias for `clientX`]]
			y = 0, --[[@type js_number]] --[[alias for `clientY`]]
			getModifierState = 0, --[[@type fun(self: js_dom_mouse_event, key: "Shift"|"Control"|"Alt"|"Meta"|"Accel"|js_string): js_boolean]]
			--[[@type fun(self: js_dom_mouse_event, type: "click"|"mousedown"|"mouseup"|"mouseover"|"mousemove"|"mouseout"|js_string, canBubble: js_boolean_like, cancelable: js_boolean_like, view: js_window_proxy, detail: js_integer_like, screenX: js_integer_like, screenY: js_integer_like, clientX: js_integer_like, clientY: js_integer_like, ctrlKey: js_boolean_like, altKey: js_boolean_like, shiftKey: js_boolean_like, metaKey: js_boolean_like, button: js_boolean_like, relatedTarget: js_dom_event_target|nil)]]
			initMouseEvent = 0, --[[@deprecated]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DragEvent  ]]
		DragEvent = { --[[@class js_dom_drag_event: js_dom_mouse_event]]
			new = 0, --[[@type fun(type: "drag"|"dragend"|"dragenter"|"dragleave"|"dragover"|"dragstart"|"drop"|js_string, dragEventInit?: {dataTransfer?:js_dom_data_transfer;screenX?:js_integer_like;screenY?:js_integer_like;clientX?:js_integer_like;clientY?:js_integer_like;ctrlKey?:js_boolean_like;shiftKey?:js_boolean_like;altKey?:js_boolean_like;metaKey?:js_boolean_like;button?:js_integer_like;buttons?:js_integer_like;relatedTarget?:js_dom_event_target;region?:js_string_like;}): js_dom_drag_event]] --[[MDN usually calls the `dragEventInit` param `options`]]
			dataTransfer = 0, --[[@type js_dom_data_transfer]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent  ]]
		KeyboardEvent = { --[[@class js_dom_keyboard_event: js_dom_ui_event]]
			--[[also accepts `type: "keypress"` but `"keypress"` is deprecated.  ]]
			--[[`option.charCode`, `keyCode` and `which` are omitted because they are also deprecated.]]
			new = 0, --[[@type fun(type: "keydown"|"keyup"|js_string, options?: {key?:js_string_like;code?:js_string_like;location?:js_integer_like;repeat?:js_boolean_like;isComposing?:js_boolean_like;which?:js_integer_like;ctrlKey?:js_boolean_like;shiftKey?:js_boolean_like;altKey?:js_boolean_like;metaKey?:js_boolean_like;}): js_dom_keyboard_event]]
			altKey = 0, --[[@type js_boolean]]
			charCode = 0, --[[@type js_number]] --[[@deprecated]]
			code = 0, --[[@type js_string]]
			ctrlKey = 0, --[[@type js_boolean]]
			isComposing = 0, --[[@type js_boolean]]
			key = 0, --[[@type js_string]]
			keyCode = 0, --[[@type js_number]] --[[@deprecated]]
			keyIdentifier = 0, --[[js_string]] --[[@deprecated was Safari only. superseded by `key`]]
			location = 0, --[[@type js_number]]
			metaKey = 0, --[[@type js_boolean]]
			["repeat"] = 0, --[[@type js_boolean]]
			shiftKey = 0, --[[@type js_boolean]]
			getModifierState = 0, --[[@type fun(self: js_dom_keyboard_event, key: "Shift"|"Control"|"Alt"|"Meta"|"Accel"|js_string): js_boolean]]
			initKeyboardEvent = 0, --[[@type fun(self: js_dom_keyboard_event, type: "keydown"|"keyup"|js_string, canBubble: js_boolean_like, cancelable: js_boolean_like, view: js_window_proxy|nil, key: js_string_like, location: js_integer_like, ctrlKey: js_boolean_like, altKey: js_boolean_like, shiftKey: js_boolean_like, metaKey: js_boolean_like)]]
			initKeyEvent = 0, --[[@type fun(self: js_dom_keyboard_event, type: "keydown"|"keyup"|js_string, bubbles: js_boolean_like, cancelable: js_boolean_like, view: js_window_proxy|nil, ctrlKey: js_boolean_like, altKey: js_boolean_like, shiftKey: js_boolean_like, metaKey: js_boolean_like, keyCode?: js_integer_like, charCode?: js_integer_like)]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent  ]]
		FocusEvent = { --[[@class js_dom_focus_event: js_dom_ui_event]]
			new = 0, --[[@type fun(type: "blur"|"focus"|"focusin"|"focusout"|js_string, options?: {relatedTarget?:js_dom_event_target;}): js_dom_focus_event]]
			relatedTarget = 0, --[[@type js_dom_event_target|nil]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/InputEvent  ]]
		InputEvent = { --[[@class js_dom_input_event: js_dom_ui_event]]
			new = 0, --[[@type fun(type: "beforeinput"|"input"|js_string, options?: {inputType?:js_string_like;data?:js_string_like;isComposing?:js_boolean_like;}): js_dom_input_event]]
			data = 0, --[[@type js_string]]
			dataTransfer = 0, --[[@type js_dom_data_transfer]]
			inputType = 0, --[[@type "insertText"|"insertReplacementText"|"insertLineBreak"|"insertParagraph"|"insertOrderedList"|"insertUnorderedList"|"insertHorizontalRule"|"insertFromYank"|"insertFromDrop"|"insertFromPaste"|"insertFromPasteAsQuotation"|"insertTranspose"|"insertCompositionText"|"insertLink"|"deleteWordBackward"|"deleteWordForward"|"deleteSoftLineBackward"|"deleteSoftLineForward"|"deleteEntireSoftLine"|"deleteHardLineBackward"|"deleteHardLineForward"|"deleteByDrag"|"deleteByCut"|"deleteContent"|"deleteContentBackward"|"deleteContentForward"|"historyUndo"|"historyRedo"|"formatBold"|"formatItalic"|"formatUnderline"|"formatStrikeThrough"|"formatSuperscript"|"formatSubscript"|"formatJustifyFull"|"formatJustifyCenter"|"formatJustifyRight"|"formatJustifyLeft"|"formatIndent"|"formatOutdent"|"formatRemove"|"formatSetBlockTextDirection"|"formatSetInlineTextDirection"|"formatBackColor"|"formatFontColor"|"formatFontName"|js_string]]
			isComposing = 0, --[[@type js_boolean]]
			getTargetRanges = 0, --[[@type fun(self: js_dom_input_event): js_dom_static_range[] ]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent  ]]
		ClipboardEvent = { --[[@class js_dom_clipboard_event: js_dom_event]]
			--[[`options.dataType` and `options.data` are non-standard]]
			new = 0, --[[@type fun(type: "copy"|"cut"|"paste"|js_string, options?: {bubbles?:js_boolean_like;cancelable?:js_boolean_like;composed?:js_boolean_like;clipboardData?:js_dom_data_transfer;dataType?:js_string_like;data?:js_string_like;})]]
			clipboardData = 0, --[[@type js_dom_data_transfer]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent  ]]
		AnimationEvent = { --[[@class js_dom_animation_event: js_dom_event]]
			new = 0, --[[@type fun(type: "animationstart"|"animationend"|"animationiteration"|js_string, options?: {animationName?:js_string_like;elapsedTime?:js_number_like;pseudoElement?:"::after"|"::backdrop"|"::before"|"::cue"|"::cue-region"|"::first-letter"|"::first-line"|"::file-selector-button"|"::grammar-error"|"::marker"|"::part()"|"::placeholder"|"::selection"|"::slotted(*)"|"::spelling-error"|"::target-text"|js_string_like;})]]
			animationName = 0, --[[@type js_string]]
			elapsedTime = 0, --[[@type js_number]]
			part = 0, --[[@type "::after"|"::backdrop"|"::before"|"::cue"|"::cue-region"|"::first-letter"|"::first-line"|"::file-selector-button"|"::grammar-error"|"::marker"|"::part()"|"::placeholder"|"::selection"|"::slotted(*)"|"::spelling-error"|"::target-text"|js_string]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer  ]]
		DataTransfer = { --[[@class js_dom_data_transfer]]
			new = 0, --[[@type fun(): js_dom_data_transfer]]
			dropEffect = 0, --[[@type "copy"|"move"|"link"|"none"|js_string]]
			effectAllowed = 0, --[[@type "none"|"copy"|"copyLink"|"copyMove"|"link"|"linkMove"|"move"|"all"|"uninitialized"|js_string]]
			--[[only available in the `drop` event]]
			files = 0, --[[@type js_dom_file_list]]
			items = 0, --[[@type js_dom_data_transfer_item_list]]
			types = 0, --[[@type js_string[] ]]
			addElement = 0, --[[@type fun(self: js_dom_data_transfer, element: js_dom_element)]] --[[@deprecated Firefox only]]
			clearData = 0, --[[@type fun(self: js_dom_data_transfer, format?: js_string_like)]]
			getData = 0, --[[@type fun(self: js_dom_data_transfer, format: js_string_like): js_string]]
			setData = 0, --[[@type fun(self: js_dom_data_transfer, format: js_string_like, data: js_string_like)]]
			setDragImage = 0, --[[@type fun(self: js_dom_data_transfer, imgElement: js_dom_element, xOffset: js_integer_like, yOffset: js_integer_like)]]
			--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList  ]]
		DataTransferItemList = { --[[@class js_dom_data_transfer_item_list: {[integer]: js_dom_data_transfer_item;}]]
			length = 0, --[[@type js_number]]
			--[[@overload fun(self: js_dom_data_transfer_item_list, file: js_file)]]
			--[[@param self js_dom_data_transfer_item_list]] --[[@param data js_string_like]] --[[@param type js_string_like]]
			add = function (self, data, type) end,
			clear = 0, --[[@type fun(self: js_dom_data_transfer_item_list)]]
			remove = 0, --[[@type fun(self: js_dom_data_transfer_item_list, index: js_integer_like)]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem  ]]
		DataTransferItem = { --[[@class js_dom_data_transfer_item]]
			kind = 0, --[[@type "file"|"string"|js_string]]
			type = 0, --[[@type js_string]]
			getAsFile = 0, --[[@type fun(self: js_dom_data_transfer_item): js_file|nil]]
			--[[returns `js_promise<js_file_system_file_handle|js_file_system_directory_handle|nil>`]]
			getAsFileSystemHandle = 0, --[[@type fun(self: js_dom_data_transfer_item): js_promise]] --[[@deprecated Chromium only]]
			--[[only calls callback if `kind` is `"string"`]]
			getAsString = 0, --[[@type fun(self: js_dom_data_transfer_item, callbackFn: (fun(data: js_string)))]]
			webkitGetAsEntry = 0, --[[@type fun(): js_file_system_file_entry|js_file_system_directory_entry|nil]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Blob  ]]
		Blob = { --[[@class js_blob]]
			--[[strings are stored as UTF-8]]
			new = 0, --[[@type fun(bits: (js_array_buffer|js_typed_array|js_data_view|js_blob|js_string_like)[], name: js_string_like, options?: {type?:js_string_like;endings?:"transparent"|"native"|js_string;}): js_blob]]
			size = 0, --[[@type js_number]]
			type = 0, --[[@type js_string]]
			arrayBuffer = 0, --[[@type fun(self: js_blob): js_promise]] --[[returns `js_promise<js_array_buffer>`]]
			slice = 0, --[[@type fun(self: js_blob, start?: js_integer_like, end?: js_integer_like, contentType?: js_string_like): js_blob]]
			stream = 0, --[[@type fun(self: js_blob): js_readable_stream]]
			text = 0, --[[@type fun(self: js_blob): js_promise]] --[[returns `js_promise<js_string>`. assumes data is in UTF-8 format.]]
			--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/File  ]]
		File = { --[[@class js_file: js_blob]]
		--[[strings are stored as UTF-8]]
			new = 0, --[[@type fun(bits: (js_array_buffer|js_typed_array|js_data_view|js_blob|js_string_like)[], name: js_string_like, options?: {type?:js_string_like;lastModified?:js_integer_like;}): js_file]]
			lastModified = 0, --[[@type js_number]]
			lastModifiedDate = 0, --[[@type js_date]] --[[@deprecated]]
			name = 0, --[[@type js_string]]
			type = 0, --[[@type js_string]] --[[already mentioned in `Blob`]]
			webkitRelativePath = 0, --[[@type js_string]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/FileList  ]]
		--[[FIXME: DOMStringList, we have TouchList, AnimationNodeList, CSSRuleList, DOMRectList]]
		FileList = { --[[@class js_dom_file_list: {[integer]: js_file}]]
			length = 0, --[[@type js_number]]
			item = 0, --[[@type fun(self: js_dom_file_list): js_file|nil]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/EventTarget  ]]
		EventTarget = { --[[@class js_dom_event_target]]
			--[[alias `js_dom_event_listener` `{handleEvent:fun(event:js_dom_event)}|fun(event:js_dom_event)`]]
			--[[@overload fun(self: js_dom_event_target, type: js_string_like, listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_event_target]] --[[@param type js_string_like]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			addEventListener = function (self, type, listener, options) end,
			--[[@type fun(self: js_dom_event_target, event: js_dom_event)]]
			dispatchEvent = 0,
			--[[@overload fun(self: js_dom_event_target, type: js_string_like, listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_event_target]] --[[@param type js_string_like]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;})]]
			removeEventListener = function (self, type, listener, options) end,
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Node  ]]
		Node = { --[[@class js_dom_node: js_dom_event_target]]
			baseURI = 0, --[[@type js_string]]
			childNodes = 0, --[[@type js_dom_node_list]]
			firstChild = 0, --[[@type js_dom_node?]]
			isConnected = 0, --[[@type js_boolean]]
			lastChild = 0, --[[@type js_dom_node?]]
			nextSibling = 0, --[[@type js_dom_node?]]
			nodeName = 0, --[[@type js_string]]
			nodeType = 0, --[[@type js_number]]
			nodeValue = 0, --[[@type js_string?]]
			ownerDocument = 0, --[[@type js_dom_document]]
			parentNode = 0, --[[@type js_dom_node?]]
			parentElement = 0, --[[@type js_dom_element?]]
			previousSibling = 0, --[[@type js_dom_node?]]
			textContent = 0, --[[@type js_string]] --[[`null` for `doctype`s]]
			--[[returns `aChild` unless it is a `DocumentFragment` in which case an empty `DocumentFragment` is returned.]]
			--[[@generic t: js_dom_node]]
			appendChild = 0, --[[@type fun(self: js_dom_node, aChild: t): t]]
			cloneNode = 0, --[[@type fun(self: js_dom_node, deep?: js_boolean_like): js_dom_node]]
			compareDocumentPosition = 0, --[[@type fun(self: js_dom_node, otherNode?: js_dom_node): js_number]]
			contains = 0, --[[@type fun(self: js_dom_node, otherNode: js_dom_node|nil): js_boolean]]
			getRootNode = 0, --[[@type fun(self: js_dom_node, options?: {composed?:js_boolean_like;}): js_dom_html_document|js_dom_shadow_root]]
			hasChildNodes = 0, --[[@type fun(self: js_dom_node): js_boolean]]
			--[[returns `newNode` unless it is a `DocumentFragment` in which case an empty `DocumentFragment` is returned.]]
			insertBefore = 0, --[[@type fun(self: js_dom_node, newNode: js_dom_node, referenceNode: js_dom_node|nil): js_dom_node]]
			isDefaultNamespace = 0, --[[@type fun(self: js_dom_node, namespaceURI: js_string_like): js_boolean]]
			isEqualNode = 0, --[[@type fun(self: js_dom_node, otherNode: js_dom_node|nil): js_boolean]]
			--[[@deprecated not officially deprecated, but is equivalent to `===`]]
			isSameNode = 0, --[[@type fun(self: js_dom_node, otherNode: js_dom_node|nil): js_boolean]]
			lookupNamespaceURI = 0, --[[@type fun(self: js_dom_node, prefix: js_string_like|nil): js_string|nil]]
			--[[always returns `null` for `DocumentType`s and `DocumentFragment`s]]
			lookupPrefix = 0, --[[@type fun(self: js_dom_node, namespace: js_string_like|nil): js_string|nil]]
			normalize = 0, --[[@type fun(self: js_dom_node)]]
			removeChild = 0, --[[@type fun(self: js_dom_node, child: js_dom_node): js_dom_node]] --[[returns `child`]]
			--[[@generic t: js_dom_node]]
			replaceChild = 0, --[[@type fun(self: js_dom_node, newChild: js_dom_node, oldChild: t): t]] --[[returns `oldChild`]]
			--[[@overload fun(self: js_dom_node, type: "selectstart", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_node]] --[[@param type "selectstart"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			addEventListener = function (self, type, listener, options) end,
			--[[@overload fun(self: js_dom_node, type: "selectstart", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_node]] --[[@param type "selectstart"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;})]]
			removeEventListener = function (self, type, listener, options) end,
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation  ]]
		DOMImplementation = { --[[@class js_dom_implementation]]
			createDocument = 0, --[[@type fun(namespaceURI: js_string_like|nil, qualifiedNameStr: js_string_like, documentType?: js_dom_document_type): js_dom_xml_document]]
			createDocumentType = 0, --[[@type fun(qualifiedNameStr: js_string_like, publicId: js_string_like, systemId: js_string_like): js_dom_document_type]]
			createHTMLDocument = 0, --[[@type fun(title?: js_string_like): js_dom_document]]
			hasFeature = 0, --[[@type fun(feature: js_string_like, version: js_string_like): js_boolean]] --[[@deprecated]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DocumentType  ]]
		DocumentType = { --[[@class js_dom_document_type: js_dom_node]]
			name = 0, --[[@type "html"|js_string]]
			publicId = 0, --[[@type "html"|"-//W3C//DTD SVG 1.1//EN"|js_string]]
			systemId = 0, --[[@type "html"|"http://www.w3.org/2000/svg"]]
			after = 0, --[[@type fun(self: js_dom_document_type, node: js_dom_node|js_string_like, ...: js_dom_node|js_string_like)]]
			before = 0, --[[@type fun(self: js_dom_document_type, node: js_dom_node|js_string_like, ...: js_dom_node|js_string_like)]]
			remove = 0, --[[@type fun(self: js_dom_document_type)]]
			replaceWith = 0, --[[@type fun(self: js_dom_document_type, node: js_dom_node|js_string_like, ...: js_dom_node|js_string_like)]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection  ]]
		--[[TODO: consider making this generic]]
		HTMLCollection = { --[[@class js_dom_html_collection: {[integer]:js_dom_element;}]]
			length = 0, --[[@type js_number]]
			item = 0, --[[@type fun(index: js_integer_like): js_dom_node|nil]]
			namedItem = 0, --[[@type fun(key: js_string_like): js_dom_node|nil]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Document/all  ]]
		HTMLAllCollection = { --[[@class js_dom_html_all_collection: js_dom_html_collection]]
			viewport = 0, --[[@type js_dom_html_meta_element|nil]] --[[`undefined` when absent, instead of `null`]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DOMStringList  ]]
		--[[a legacy type; superseded by `Array<string>`]]
		DOMStringList = { --[[@class js_dom_string_list: {[integer]:string;}]]
			contains = 0, --[[@type fun(string: js_string_like): js_boolean]]
			item = 0, --[[@type fun(index: js_integer_like): string|nil]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Location  ]]
		Location = { --[[@class js_location]]
			ancestorOrigins = 0, --[[@type js_dom_string_list]]
			hash = 0, --[[@type js_string]]
			host = 0, --[[@type js_string]]
			hostname = 0, --[[@type js_string]]
			href = 0, --[[@type js_string]]
			origin = 0, --[[@type js_string]]
			pathname = 0, --[[@type js_string]]
			port = 0, --[[@type js_string]]
			protocol = 0, --[[@type js_string]]
			search = 0, --[[@type js_string]]
			assign = 0, --[[@type fun(self: js_location, url: js_string_like)]]
			reload = 0, --[[@type fun(self: js_location)]]
			replace = 0, --[[@type fun(self: js_location, url: js_string_like)]]
			toString = 0, --[[@type fun(self: js_location): js_string]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator ]]
		XPathEvaluator = { --[[@class js_dom_xpath_evaluator]]
			new = 0, --[[@type fun(): js_dom_xpath_evaluator]]
			createExpression = 0, --[[@type fun(self: js_dom_xpath_evaluator, expression: js_string_like, resolver?: (fun(namespacePrefix: js_string): js_string_like)): js_dom_xpath_expression]]
			createNSResolver = 0, --[[@type fun(self: js_dom_xpath_evaluator, nodeResolver: js_dom_node): js_dom_xpath_ns_resolver]]
			evaluate = 0, --[[@type fun(self: js_dom_xpath_evaluator, expression: js_string_like, contextNode: js_dom_node, resolver?: (fun(namespacePrefix: js_string): js_string_like), type?: js_integer_like, result?: js_dom_xpath_result): js_dom_xpath_expression]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/XPathResult ]]
		XPathResult = { --[[@class js_dom_xpath_result]]
			booleanValue = 0, --[[@type js_boolean]]
			invalidIteratorState = 0, --[[@type js_boolean]]
			numberValue = 0, --[[@type js_number]]
			resultType = 0, --[[@type js_number]]
			singleNodeValue = 0, --[[@type js_dom_node]]
			snapshotLength = 0, --[[@type js_number]]
			stringValue = 0, --[[@type js_string]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/XPathExpression ]]
		XPathExpression = { --[[@class js_dom_xpath_expression]]
			evaluate = 0, --[[@type fun(contextNode: js_dom_node, type?: js_integer_like, result?: js_dom_xpath_result|nil): js_dom_xpath_result]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Document ]]
		Document = { --[[@class js_dom_document: js_dom_node]]
			ownerDocument = 0, --[[@type nil]]
			textContent = 0, --[[@type nil]]
			activeElement = 0, --[[@type js_dom_element|nil]]
			adoptedStyleSheets = 0, --[[@type js_dom_css_style_sheet[] ]]
			alinkColor = 0, --[[@type js_string]] --[[@deprecated]]
			all = 0, --[[@type js_dom_html_all_collection]] --[[@deprecated]]
			anchors = 0, --[[@type js_dom_html_collection]] --[[@deprecated]]
			applets = 0, --[[@type js_dom_html_collection]] --[[@deprecated]]
			bgColor = 0, --[[@type js_string]] --[[@deprecated]]
			body = 0, --[[@type js_dom_html_body_element|nil]] --[[may also be `js_dom_html_frameset_element` but that is deprecated]]
			characterSet = 0, --[[@type js_string]]
			childElementCount = 0, --[[@type js_number]]
			children = 0, --[[@type js_dom_html_collection]]
			compatMode = 0, --[[@type "BackCompat"|"CSS1Compat"|js_string]]
			contentType = 0, --[[@type js_string]]
			cookie = 0, --[[@type js_string]]
			currentScript = 0, --[[@type js_dom_html_script_element|nil]]
			defaultView = 0, --[[@type js_window|nil]]
			designMode = 0, --[[@type "on"|"off"|js_string]]
			dir = 0, --[[@type "rtl"|"ltr"|"auto"|js_string]] --[[text direction]]
			doctype = 0, --[[@type js_dom_document_type]]
			documentElement = 0, --[[@type js_dom_element]]
			documentURI = 0, --[[@type js_string]]
			domain = 0, --[[@type js_string]] --[[@deprecated]]
			embeds = 0, --[[@type js_dom_html_collection]]
			featurePolicy = 0, --[[@type js_feature_policy]] --[[@deprecated experimental]]
			fgColor = 0, --[[@type js_string]] --[[@deprecated]]
			firstElementChild = 0, --[[@type js_dom_element|nil]]
			fonts = 0, --[[@type js_font_face_set]]
			forms = 0, --[[@type js_dom_html_collection]]
			fragmentDirective = 0, --[[@type js_fragment_directive]] --[[@deprecated experimental]]
			fullscreen = 0, --[[@type js_boolean]] --[[@deprecated]]
			fullscreenElement = 0, --[[@type js_dom_element|nil]]
			fullscreenEnabled = 0, --[[@type js_boolean]]
			head = 0, --[[@type js_dom_html_head_element]]
			hidden = 0, --[[@type js_boolean]]
			images = 0, --[[@type js_dom_html_collection]]
			implementation = 0, --[[@type js_dom_implementation]]
			lastElementChild = 0, --[[@type js_dom_element|nil]]
			lastModified = 0, --[[@type js_string]]
			lastStyleSheetSet = 0, --[[@type js_string|nil]] --[[@deprecated Firefox only]]
			linkColor = 0, --[[@type js_string]] --[[@deprecated]]
			links = 0, --[[@type js_dom_html_collection]]
			location = 0, --[[@type js_location]]
			pictureInPictureElement = 0, --[[@type js_dom_element|nil]]
			pictureInPictureEnabled = 0, --[[@type js_boolean]]
			plugins = 0, --[[@type js_dom_html_collection]]
			pointerLockElement = 0, --[[@type js_dom_element|nil]]
			preferredStyleSheetSet = 0, --[[@type js_string]] --[[@deprecated Firefox only]]
			readyState = 0, --[[@type "loading"|"interactive"|"complete"|js_string]]
			referrer = 0, --[[@type js_string]]
			rootElement = 0, --[[@type js_dom_svg_svg_element|nil]] --[[@deprecated was SVG-specific. use `document.documentElement` instead.]]
			scripts = 0, --[[@type js_dom_html_collection]]
			scrollingElement = 0, --[[@type js_dom_element]]
			selectedStyleSheetSet = 0, --[[@type js_string]] --[[@deprecated Firefox only]]
			styleSheets = 0, --[[@type js_dom_style_sheet_list]]
			styleSheetSets = 0, --[[@type js_string[] ]] --[[@deprecated Firefox only]]
			timeline = 0, --[[@type js_document_timeline]]
			title = 0, --[[@type js_string]]
			URL = 0, --[[@type js_string]]
			visibilityState = 0, --[[@type "visible"|"hidden"|js_string]]
			vlinkColor = 0, --[[@type js_string]] --[[@deprecated]]
			xmlEncoding = 0, --[[@type js_string|nil?]] --[[@deprecated]]
			xmlStandlone = 0, --[[@type js_boolean?]] --[[@deprecated]]
			xmlVersion = 0, --[[@type js_string|nil?]] --[[@deprecated]]
			createAttribute = 0, --[[@type fun(self: js_dom_document, name: js_string_like): js_dom_attr]]
			createAttributeNS = 0, --[[@type fun(self: js_dom_document, namespaceURI: "http://www.w3.org/1999/xhtml"|"http://www.w3.org/2000/svg"|"http://www.w3.org/1998/Math/MathML"|js_string, qualifiedName: js_string_like): js_dom_attr]]
			createCDATASection = 0, --[[@type fun(self: js_dom_document, data: js_string_like): js_dom_cdata_section]]
			createComment = 0, --[[@type fun(self: js_dom_document, data: js_string_like): js_dom_comment]]
			createDocumentFragment = 0, --[[@type fun(self: js_dom_document): js_dom_document_fragment]]
			createElement = 0, --[[@type fun(self: js_dom_document, tagName: js_string_like, options?: {is:js_string_like;}): js_dom_html_element]]
			createElementNS = 0, --[[@type fun(self: js_dom_document, namespaceURI: "http://www.w3.org/1999/xhtml"|"http://www.w3.org/2000/svg"|"http://www.w3.org/1998/Math/MathML"|js_string, qualifiedName: js_string_like): js_dom_element]]
			createEvent = 0, --[[@type fun(self: js_dom_document, type: js_string_like): js_dom_event]] --[[@deprecated methods used with `createEvent` are discouraged. use event constructors instead.]]
			createExpression = 0, --[[@type fun(self: js_dom_document, xpathText: js_string_like, namespaceURLMapper: (fun(namespacePrefix: js_string): js_string_like)): js_dom_xpath_expression]]
			createNodeIterator = 0, --[[@type fun(self: js_dom_document, root: js_dom_node, whatToShow?: js_integer_like, filter?: (fun(node:js_dom_node):js_integer_like)|{acceptNode:fun(node:js_dom_node):js_integer_like;})]]
			createNSResolver = 0, --[[@type fun(self: js_dom_document, node: js_dom_node): js_dom_xpath_ns_resolver]]
			createProcessingInstruction = 0, --[[@type fun(self: js_dom_document, target: js_string_like, data: js_string_like): js_dom_processing_instruction]]
			createRange = 0, --[[@type fun(self: js_dom_document): js_dom_range]]
			createTextNode = 0, --[[@type fun(self: js_dom_document, data: js_string_like): js_dom_text]]
			getElementById = 0, --[[@type fun(self: js_dom_document, id: js_string_like): js_dom_element|js_dom_html_element|nil]]
			getElementsByClassName = 0, --[[@type fun(self: js_dom_document, names: js_string_like): js_dom_html_collection]]
			getElementsByName = 0, --[[@type fun(self: js_dom_document, name: js_string_like): js_dom_node_list]]
			getElementsByTagName = 0, --[[@type fun(self: js_dom_document, name: js_string_like): js_dom_html_collection]]
			getElementsByTagNameNS = 0, --[[@type fun(self: js_dom_document, namespace: js_string_like, name: js_string_like): js_dom_html_collection]]
			open = 0, --[[@type fun(self: js_dom_document): js_dom_document]] --[[@deprecated strongly discouraged]]
			querySelector = 0, --[[@type fun(self: js_dom_document, selectors: js_string_like): js_dom_element|nil]]
			querySelectorAll = 0, --[[@type fun(self: js_dom_document, selectors: js_string_like): js_dom_node_list]]
			write = 0, --[[@type fun(self: js_dom_document, markup: js_string_like)]] --[[@deprecated strongly discouraged]]
			writeln = 0, --[[@type fun(self: js_dom_document, markup: js_string_like)]] --[[@deprecated strongly discouraged]]
		--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/XMLDocument  ]]
		XMLDocument = { --[[@class js_dom_xml_document: js_dom_document]]
			createElement = 0, --[[@type fun(self: js_dom_document, tagName: js_string_like): js_dom_element]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/DOMStringMap  ]]
		DOMStringMap = { --[[@class js_dom_string_map]] --[[FIXME: index signatures]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Element  ]]
		Element = { --[[@class js_dom_element: js_dom_node]]
			innerHTML = 0, --[[@type js_string_like]]
			--[[`selectstart` is inherited.  ]]
			--[[`keypress` is omitted as it is deprecated.  ]]
			--[[`afterscriptexecute`, `beforescriptexecute`, `DOMMouseScroll`, `MozMousePixelScroll` are Firefox only.  ]]
			--[[`beforematch`, `beforexrselect`, `contentvisibilityautostatechange`, are Chromium only.  ]]
			--[[`gesturechange`, `gestureend`, `gesturestart`, `webkitmouseforcechanged`, `webkitmouseforcedown`, `webkitmouseforceup`, `webkitmouseforcewillbegin` are WebKit only.  ]]
			--[[`mousewheel` is Chromium and WebKit only.  ]]
			--[[IMPL: all other events]]
			--[[@overload fun(self: js_dom_element, type: "selectstart", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "blur", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "blur", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "click", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "click", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "focus", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "focus", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_element]] --[[@param type "selectstart"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			addEventListener = function (self, type, listener, options) end,
			--[[`selectstart` is inherited.  ]]
			--[[`keypress` is omitted as it is deprecated.  ]]
			--[[`afterscriptexecute`, `beforescriptexecute`, `DOMMouseScroll`, `MozMousePixelScroll` are Firefox only.  ]]
			--[[`beforematch`, `beforexrselect`, `contentvisibilityautostatechange`, are Chromium only.  ]]
			--[[`gesturechange`, `gestureend`, `gesturestart`, `webkitmouseforcechanged`, `webkitmouseforcedown`, `webkitmouseforceup`, `webkitmouseforcewillbegin` are WebKit only.  ]]
			--[[`mousewheel` is Chromium and WebKit only.  ]]
			--[[IMPL: all other events]]
			--[[@overload fun(self: js_dom_element, type: "selectstart", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "blur", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "blur", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "click", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "click", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "focus", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "focus", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_element]] --[[@param type "selectstart"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;})]]
			removeEventListener = function (self, type, listener, options) end,
		--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement  ]]
		HTMLElement = { --[[@class js_dom_html_element: js_dom_element]]
			accessKey = 0, --[[@type js_string]]
			accessKeyLabel = 0, --[[@type js_string]] --[[readonly]]
			contentEditable = 0, --[[@type "true"|"false"|"inherit"|js_string]]
			dataset = 0, --[[@type js_dom_string_map]]
			dir = 0, --[[@type "rtl"|"ltr"|js_string]]
			enterKeyHint = 0, --[[@type "enter"|"done"|"go"|"next"|"previous"|"search"|"send"|js_string]]
			hidden = 0, --[[@type "until-found"|js_boolean]]
			inert = 0, --[[@type js_boolean]]
			--[[setting `innerText` removes all children and adds a single `Text` node]]
			innerText = 0, --[[@type js_string_like]]
			inputMode = 0, --[[@type "decimal"|"email"|"none"|"numeric"|"search"|"tel"|"text"|"url"|js_string]]
			isContentEditable = 0, --[[@type js_boolean]]
			lang = 0, --[[@type js_string]]
			nonce = 0, --[[@type js_string]]
			offsetHeight = 0, --[[@type js_number]]
			offsetLeft = 0, --[[@type js_number]]
			offsetParent = 0, --[[@type js_dom_html_element|nil]]
			offsetTop = 0, --[[@type js_number]]
			offsetWidth = 0, --[[@type js_number]]
			--[[setting `outerText` replaces the node with a single `Text` node]]
			outerText = 0, --[[@type js_string]]
			style = 0, --[[@type js_string]]
			tabIndex = 0, --[[@type js_number]]
			title = 0, --[[@type js_string]]
			attachInternals = 0, --[[@type fun(self: js_dom_html_element): js_dom_element_internals]]
			blur = 0, --[[@type fun(self: js_dom_html_element)]]
			click = 0, --[[@type fun(self: js_dom_html_element)]]
			focus = 0, --[[@type fun(self: js_dom_html_element, options?: {preventScroll?:js_boolean_like;focusVisible?:js_boolean_like;})]]
			--[[`selectstart` through `mouseup` are inherited]]
			--[[`mscandidatewindowhide`, `mscandidatewindowshow`, `mscandidatewindowupdate` events omitted]]
			--[[@overload fun(self: js_dom_html_element, type: "selectstart", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "blur", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "blur", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "click", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "click", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "focus", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "focus", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "beforeinput", listener: (fun(event:js_dom_input_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "beforeinput", listener: (fun(event:js_dom_input_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "change", listener: (fun(event:js_dom_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "change", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "copy", listener: (fun(event:js_dom_clipboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "copy", listener: (fun(event:js_dom_clipboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "cut", listener: (fun(event:js_dom_clipboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "cut", listener: (fun(event:js_dom_clipboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "drag", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "drag", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragend", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragend", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragenter", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragenter", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragleave", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragleave", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragover", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragover", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragstart", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragstart", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "drop", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "drop", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "paste", listener: (fun(event:js_dom_clipboard_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "paste", listener: (fun(event:js_dom_clipboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "input", listener: (fun(event:js_dom_event)), options?: {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			--[[@overload fun(self: js_dom_html_element, type: "input", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_event_target]] --[[@param type "selectstart"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			addEventListener = function (self, type, listener, options) end,
			--[[@overload fun(self: js_dom_html_element, type: "selectstart", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "animationcancel", listener: (fun(event:js_dom_animation_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "blur", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "blur", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "click", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "click", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "focus", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "focus", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "focusin", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "focusout", listener: (fun(event:js_dom_focus_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "keydown", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "keyup", listener: (fun(event:js_dom_keyboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mousedown", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseenter", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseleave", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mousemove", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseout", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseover", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "mouseup", listener: (fun(event:js_dom_mouse_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "beforeinput", listener: (fun(event:js_dom_input_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "beforeinput", listener: (fun(event:js_dom_input_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "change", listener: (fun(event:js_dom_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "change", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "copy", listener: (fun(event:js_dom_clipboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "copy", listener: (fun(event:js_dom_clipboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "cut", listener: (fun(event:js_dom_clipboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "cut", listener: (fun(event:js_dom_clipboard_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "drag", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "drag", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragend", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragend", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragenter", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragenter", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragleave", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragleave", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragover", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragover", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "dragstart", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "dragstart", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "drop", listener: (fun(event:js_dom_drag_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "drop", listener: (fun(event:js_dom_drag_event)), useCapture: js_boolean_like)]]
			--[[@overload fun(self: js_dom_html_element, type: "paste", listener: (fun(event:js_dom_clipboard_event)), options?: {capture?:js_boolean_like;})]]
			--[[@overload fun(self: js_dom_html_element, type: "paste", listener: (fun(event:js_dom_clipboard_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_html_element]] --[[@param type "selectstart"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;})]]
			removeEventListener = function (self, type, listener, options) end,
		--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement  ]]
		HTMLBodyElement = { --[[@class js_dom_html_body_element: js_dom_html_element]]
			aLink = 0, --[[@type js_string_like]] --[[@deprecated]]
			background = 0, --[[@type js_string_like]] --[[@deprecated]]
			bgColor = 0, --[[@type js_string_like]] --[[@deprecated]]
			link = 0, --[[@type js_string_like]] --[[@deprecated]]
			text = 0, --[[@type js_string_like]] --[[@deprecated]]
			vLink = 0, --[[@type js_string_like]] --[[@deprecated]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement  ]]
		HTMLFrameSetElement = { --[[@class js_dom_html_frameset_element: js_dom_html_element]]
			cols = 0, --[[@type js_string_like]] --[[@deprecated]]
			rows = 0, --[[@type js_string_like]] --[[@deprecated]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/CharacterData  ]]
		CharacterData = { --[[@class js_dom_character_data: js_dom_node]]
			data = 0, --[[@type js_string]]
			length = 0, --[[@type js_number]]
			nextElementSibling = 0, --[[@type js_dom_element|nil]]
			previousElementSibling = 0, --[[@type js_dom_element|nil]]
			after = 0, --[[@type fun(self: js_dom_character_data, node: js_dom_node|js_string_like, ...: js_dom_node|js_string_like)]]
			appendData = 0, --[[@type fun(self: js_dom_character_data, data: js_string_like)]]
			before = 0, --[[@type fun(self: js_dom_character_data, node: js_dom_node|js_string_like, ...: js_dom_node|js_string_like)]]
			deleteData = 0, --[[@type fun(self: js_dom_character_data, offset: js_integer_like, count: js_integer_like)]]
			insertData = 0, --[[@type fun(self: js_dom_character_data, offset: js_integer_like, data: js_string_like)]]
			remove = 0, --[[@type fun(self: js_dom_character_data)]]
			replaceData = 0, --[[@type fun(self: js_dom_character_data, offset: js_integer_like, count: js_integer_like, data: js_string_like)]]
			replaceWith = 0, --[[@type fun(self: js_dom_character_data, node: js_dom_node|js_string_like, ...: js_dom_node|js_string_like)]]
			substringData = 0, --[[@type fun(self: js_dom_character_data, offset: js_integer_like, count: js_integer_like): js_string]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Comment  ]]
		Comment = { --[[@class js_dom_comment: js_dom_character_data]]
			new = 0, --[[@type fun(aString?: js_string_like): js_dom_comment]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction  ]]
		--[[are converted into `Comment`s when inserted into HTML documents]]
		ProcessingInstruction = { --[[@class js_dom_processing_instruction: js_dom_character_data]]
			sheet = 0, --[[@type js_dom_stylesheet|nil]]
			target = 0, --[[@type js_string]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Text  ]]
		Text = { --[[@class js_dom_text : js_dom_character_data]]
			new = 0, --[[@type fun(string?: js_string_like): js_dom_text]]
			assignedSlot = 0, --[[@type js_dom_html_slot_element|nil]]
			wholeText = 0, --[[@type js_string]]
			--[[splits the text before the `offset`th character and inserts as next sibling (if possible) and returns the part after]]
			splitText = 0, --[[@type fun(offset: js_integer_like)]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/CDATASection  ]]
		CDATASection = { --[[@class js_dom_cdata_section: js_dom_text]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/Attr  ]]
		Attr = { --[[@class js_dom_attr: js_dom_node]]
			localName = 0, --[[@type js_string]]
			name = 0, --[[@type js_string]]
			namespaceURI = 0, --[[@type js_string|nil]]
			ownerElement = 0, --[[@type js_dom_element|nil]]
			prefix = 0, --[[@type js_string|nil]]
			specified = 0, --[[@type js_boolean]] --[[@deprecated always returns `true`]]
			value = 0, --[[@type js_string]]
		},
		--[[acts like a pointer to a `js_window`]]
		--[[@class js_window_proxy: js_window]]

		--[[https://developer.mozilla.org/en-US/docs/Web/API/Window  ]]
		Window = { --[[@class js_window: js_browser_namespace]]
			document = 0, --[[@type js_dom_document]]
			window = 0, --[[@type js_window]]
			console = { --[[@class js_console]]
				--[[@overload fun(self: js_console, assertion: js_boolean_like, msg: js_string_like, ...: unknown)]]
				--[[@param self js_console]] --[[@param assertion js_boolean_like]] --[[@param obj unknown]] --[[@param ... unknown]]
				assert = function (self, assertion, obj, ...) end,
				--[[@overload fun(self: js_console, obj: unknown, ...: unknown)]]
				--[[@param self js_console]] --[[@param msg js_string_like]] --[[@param ... unknown]]
				log = function (self, msg, ...) end,
			--[[IMPL]]
			},
			--[[@class js_timeout_id]]
			--[[also has a `code: js_string_like` overload which is omitted as it is highly not recommended  ]]
			--[[delay is technically optional but required here as omitting it is usually a mistake  ]]
			--[[same with including the extra parameters that are passed to `functionRef`]]
			setTimeout = 0, --[[@type fun(functionRef: (fun()), delay: js_integer_like): js_timeout_id]]
			clearTimeout = 0, --[[@type fun(timeoutID: js_timeout_id)]]
			--[[@class js_interval_id]]
			--[[also has a `code: js_string_like` overload which is omitted as it is highly not recommended  ]]
			--[[delay is technically optional but required here as omitting it is usually a mistake  ]]
			--[[same with including the extra parameters that are passed to `functionRef`]]
			setInterval = 0, --[[@type fun(func: (fun()), delay: js_integer_like): js_interval_id]]
			clearInterval = 0, --[[@type fun(intervalID: js_timeout_id)]]
			--[[returns `js_promise<js_response>`]]
			--[[@type fun(resource: js_string_like|js_url|js_dom_request, options?: {method?:"GET"|"HEAD"|"POST"|"PUT"|"DELETE"|"CONNECT"|"OPTIONS"|"TRACE"|js_string;headers?:js_dom_headers|{[1]:js_string_like;[2]:js_string_like;}[]|table<js_string_like,js_string_like>;body?:js_string_like|js_blob|js_array_buffer|js_typed_array|js_data_view|js_form_data|js_url_search_params|js_readable_stream;mode?:"cors"|"no-cors"|"same-origin"|js_string;credentials?:"omit"|"same-origin"|"include"|js_string;cache?:"default"|"no-store"|"reload"|"no-cache"|"force-cache"|"only-if-cached"|js_string;redirect?:"follow"|"error"|"manual"|js_string;referrer?:js_string_like;referrerPolicy?:"no-referrer"|"no-referrer-when-downgrade"|"same-origin"|"origin"|"strict-origin"|"origin-when-cross-origin"|"strict-origin-when-cross-origin"|"unsafe-url"|js_string;integrity?:js_string_like;keepalive?:js_boolean_like;signal?:js_dom_abort_signal;priority?:"high"|"low"|"auto"|js_string;}): js_promise]]
			fetch = 0,
		--[[IMPL]]
		},
		--[[@class js_object_url]]

		--[[https://developer.mozilla.org/en-US/docs/Web/API/URL  ]]
		URL = { --[[@class js_url]]
			new = 0, --[[@type fun(url: js_string_like|js_url|js_dom_html_anchor_element|js_dom_html_area_element, base?: js_string_like): js_url]]
			hash = 0, --[[@type js_string]]
			host = 0, --[[@type js_string]]
			hostname = 0, --[[@type js_string]]
			href = 0, --[[@type js_string]]
			origin = 0, --[[@type js_string]]
			password = 0, --[[@type js_string]]
			pathname = 0, --[[@type js_string]]
			port = 0, --[[@type js_string]]
			protocol = 0, --[[@type js_string]]
			search = 0, --[[@type js_string]]
			searchParams = 0, --[[@type js_url_search_params]]
			username = 0, --[[@type js_string]]
			createObjectURL = 0, --[[@type fun(object: js_file|js_blob|js_media_source): js_object_url]]
			revokeObjectURL = 0, --[[@type fun(objectURL: js_object_url)]]
			toJSON = 0, --[[@type fun(self: js_url): js_string]]
			toString = 0, --[[@type fun(self: js_url): js_string]]
		},
		JSON = { --[[@class js_json]]
			parse = 0, --[[@type fun(text: js_string_like, reviver?: (fun(key: js_string_like, value: unknown): unknown))]]
			stringify = 0, --[[@type fun(value: unknown, replacer?: (fun(key: js_string_like, value: unknown): unknown)|(js_string_like|js_number_like)[]|table<string,unknown>, space?: js_string_like|js_integer_like)]]
		},
		Math = { --[[@class js_math]]
			E = 0, --[[@type js_number]]
			LN10 = 0, --[[@type js_number]]
			LN2 = 0, --[[@type js_number]]
			LOG10E = 0, --[[@type js_number]]
			LOG2E = 0, --[[@type js_number]]
			PI = 0, --[[@type js_number]]
			SQRT1_2 = 0, --[[@type js_number]]
			SQRT2 = 0, --[[@type js_number]]
			abs = 0, --[[@type fun(x: js_number_like): js_number]]
			acos = 0, --[[@type fun(x: js_number_like): js_number]]
			acosh = 0, --[[@type fun(x: js_number_like): js_number]]
			asin = 0, --[[@type fun(x: js_number_like): js_number]]
			asinh = 0, --[[@type fun(x: js_number_like): js_number]]
			atan = 0, --[[@type fun(x: js_number_like): js_number]]
			atan2 = 0, --[[@type fun(y: js_number_like, x: js_number_like): js_number]]
			atanh = 0, --[[@type fun(x: js_number_like): js_number]]
			cbrt = 0, --[[@type fun(x: js_number_like): js_number]]
			ceil = 0, --[[@type fun(x: js_number_like): js_number]] --[[returns integer]]
			clz32 = 0, --[[@type fun(x: js_integer_like): js_number]] --[[returns integer]]
			cos = 0, --[[@type fun(x: js_number_like): js_number]]
			cosh = 0, --[[@type fun(x: js_number_like): js_number]]
			exp = 0, --[[@type fun(x: js_number_like): js_number]]
			expm1 = 0, --[[@type fun(x: js_number_like): js_number]]
			floor = 0, --[[@type fun(x: js_number_like): js_number]] --[[returns integer]]
			fround = 0, --[[@type fun(doubleFloat: js_number_like): js_number]]
			hypot = 0, --[[@type fun(value: js_number_like, ...: js_number_like): js_number]]
			imul = 0, --[[@type fun(a: js_integer_like, b: js_integer_like): js_number]]
			log = 0, --[[@type fun(x: js_number_like): js_number]]
			log10 = 0, --[[@type fun(x: js_number_like): js_number]]
			log1p = 0, --[[@type fun(x: js_number_like): js_number]]
			log2 = 0, --[[@type fun(x: js_number_like): js_number]]
			max = 0, --[[@type fun(value: js_number_like, ...: js_number_like): js_number]]
			min = 0, --[[@type fun(value: js_number_like, ...: js_number_like): js_number]]
			pow = 0, --[[@type fun(base: js_number_like, exponent: js_number_Like	): js_number]]
			random = 0, --[[@type fun(): js_number]]
			round = 0, --[[@type fun(x: js_number_like): js_number]] --[[returns integer]]
			sign = 0, --[[@type fun(x: js_number_like): 1|-1|0|-0|js_number]] --[[may also return `NaN`]]
			sin = 0, --[[@type fun(x: js_number_like): js_number]]
			sinh = 0, --[[@type fun(x: js_number_like): js_number]]
			sqrt = 0, --[[@type fun(x: js_number_like): js_number]] --[[returns `NaN` when `x < 0`]]
			tan = 0, --[[@type fun(x: js_number_like): js_number]]
			tanh = 0, --[[@type fun(x: js_number_like): js_number]]
			trunc = 0, --[[@type fun(x: js_number_like): js_number]] --[[returns integer]]
		--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams ]]
		URLSearchParams = { --[[@class js_url_search_params]]
			new = 0, --[[@type fun(options?: js_string_like|{[1]:js_string_like;[2]:js_string_like;}[]|table<js_string_like,js_string_like>|js_form_data): js_url_search_params]]
			append = 0, --[[@type fun(self: js_url_search_params, name: js_string_like, value: js_string_like)]]
			delete = 0, --[[@type fun(self: js_url_search_params, name: js_string_like)]]
			entries = 0, --[[@type fun(self: js_url_search_params): (fun(): {[1]:js_string_like;[2]:js_string_like;})]] --[[returns an iterator]]
			--[[TODO: consider representing `thisArg` in type system]]
			forEach = 0, --[[@type fun(self: js_url_search_params, callback: (fun(value: js_string_like, key: js_string_like, searchParams: js_url_search_params)), thisArg?: unknown)]]
			get = 0, --[[@type fun(self: js_url_search_params, name: js_string_like): js_string|nil]]
			getAll = 0, --[[@type fun(self: js_url_search_params, name: js_string_like): js_string[] ]]
			has = 0, --[[@type fun(self: js_url_search_params, name: js_string_like): js_boolean]]
			keys = 0, --[[@type fun(self: js_url_search_params): (fun(): js_string)]] --[[returns an iterator]]
			set = 0, --[[@type fun(self: js_url_search_params, name: js_string_like, value: js_string_like)]]
			sort = 0, --[[@type fun(self: js_url_search_params)]]
			toString = 0, --[[@type fun(self: js_url_search_params): js_string]] --[[url query string, without `?`. empty string if this contains no entries]]
			values = 0, --[[@type fun(self: js_url_search_params): (fun(): js_string)]] --[[returns an iterator]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal  ]]
		AbortSignal = { --[[@class js_dom_abort_signal: js_dom_event_target]]
			aborted = 0, --[[@type js_boolean]]
			reason = 0, --[[@type unknown|nil]] --[[`undefined` when not aborted, not `null`]]
			abort = 0, --[[@type fun(reason?: js_string_like): js_dom_abort_signal]]
			timeout = 0, --[[@type fun(timeline: js_integer_like): js_dom_abort_signal]]
			throwIfAborted = 0, --[[@type fun(self: js_dom_abort_signal)]]
			--[[@overload fun(self: js_dom_node, type: "abort", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_event_target]] --[[@param type "abort"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;once?:js_boolean_like;passive?:js_boolean_like;signal?:js_dom_abort_signal;})]]
			addEventListener = function (self, type, listener, options) end,
			--[[@overload fun(self: js_dom_node, type: "abort", listener: (fun(event:js_dom_event)), useCapture: js_boolean_like)]]
			--[[@param self js_dom_event_target]] --[[@param type "abort"]] --[[@param listener fun(event:js_dom_event)]] --[[@param options? {capture?:js_boolean_like;})]]
			removeEventListener = function (self, type, listener, options) end,
		},
		Crypto = { --[[@class js_crypto]]
		--[[IMPL]]
		},
		SubtleCrypto = { --[[@class js_subtle_crypto]]
		--[[IMPL]]
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/FeaturePolicy  ]]
		--[[@deprecated experimental]]
		FeaturePolicy = { --[[@class js_feature_policy]]
			--[[@type fun(): js_string_like[] ]]
			allowedFeatures = 0,
			--[[@type fun(feature: js_string_like, origin?: js_string_like): js_boolean]]
			allowsFeature = 0,
			--[[@type fun(): js_string_like[] ]]
			features = 0,
			--[[@type fun(feature: js_string_like): js_string_like[] ]]
			getAllowlistForFeature = 0,
		},
		--[[https://developer.mozilla.org/en-US/docs/Web/API/FragmentDirective  ]]
		--[[@deprecated experimental]]
		--[[@class js_fragment_directive_item]]
		--[[@field prefix js_string]]
		--[[@field textStart js_string]]
		--[[@field textEnd js_string]]
		--[[@field suffix js_string]]
		--[[@field type js_string]]

		--[[@deprecated experimental]]
		FragmentDirective = { --[[@class js_fragment_directive]]
			items = 0, --[[@type js_fragment_directive_item[] ]]
		},
	}
	local web_workers = { --[[@class js_web_workers_namespace: js_common_namespace]]
	--[[IMPL]]
	}
	local node = { --[[@class js_node_namespace: js_common_namespace]]
	--[[IMPL]]
	}
	local deno = { --[[@class js_deno_namespace: js_common_namespace]]
	--[[IMPL]]
	}
	local bun = { --[[@class js_bun_namespace: js_common_namespace]]
	--[[IMPL]]
	}
	--[[IMPL: Intl, Temporal]]

	local XPathNSResolver = { --[[@class js_dom_xpath_ns_resolver]]
		lookupNamespaceURI = 0, --[[@type fun(prefix: js_string_like): js_string|nil]]
	}
end
